/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import model.HadiahDigital;
import model.HadiahFisik;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Muhammad Rizky S
 */
import model.Database;
public class KelolaExchange extends javax.swing.JFrame {

    /**
     * Creates new form LoginAdminView
     */
    public KelolaExchange() {
        initComponents();
        loadTabel();
        tanggalExpiredField.setVisible(false);
        voucherLabel.setVisible(false);
        warnaField.setVisible(false);
        warnaLabel.setVisible(false);
    }
    
    void loadTabel(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama Item");
        model.addColumn("Stok");
        model.addColumn("Harga Poin");
        model.addColumn("Tipe");
        model.addColumn("Tanggal Expired");
        model.addColumn("Warna");
        try {
            String query = "SELECT * FROM hadiah";
            PreparedStatement ps = Database.connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()){
                model.addRow(new Object[]{
                    rs.getString("id"),
                    rs.getString("nama_produk"),
                    rs.getInt("stok"),
                    rs.getInt("poin_penukaran"),
                    rs.getString("tipe"),
                    rs.getString("tanggal_expired"),
                    rs.getString("warna")
                });
                tabelItem.setModel(model);
                TableColumnModel columnModel = tabelItem.getColumnModel();
                columnModel.getColumn(0).setPreferredWidth(70);
                columnModel.getColumn(1).setPreferredWidth(150);
                columnModel.getColumn(2).setPreferredWidth(38);
                columnModel.getColumn(3).setPreferredWidth(100);
                columnModel.getColumn(4).setPreferredWidth(65);
                columnModel.getColumn(5).setPreferredWidth(150);
                columnModel.getColumn(6).setPreferredWidth(100);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Gagal menampilkan data" + e.getMessage());
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        poinField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        stokField = new javax.swing.JTextField();
        typeComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        tanggalExpiredField = new javax.swing.JTextField();
        warnaField = new javax.swing.JTextField();
        voucherLabel = new javax.swing.JLabel();
        warnaLabel = new javax.swing.JLabel();
        kembaliButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelItem = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        hapusButton = new javax.swing.JButton();
        tambahButton = new javax.swing.JButton();
        rewardField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Exchange Poin           :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 160, 30));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Reward Item              :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 160, 30));

        poinField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poinFieldActionPerformed(evt);
            }
        });
        getContentPane().add(poinField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 250, 30));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Stock Item                  :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 145, -1, -1));

        stokField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stokFieldActionPerformed(evt);
            }
        });
        getContentPane().add(stokField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 250, 30));

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Tipe Item", "Digital", "Fisik" }));
        typeComboBox.setToolTipText("");
        typeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(typeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, 250, 30));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Item Type                   :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 225, -1, -1));

        tanggalExpiredField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanggalExpiredFieldActionPerformed(evt);
            }
        });
        getContentPane().add(tanggalExpiredField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 250, 30));

        warnaField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                warnaFieldActionPerformed(evt);
            }
        });
        getContentPane().add(warnaField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 260, 250, 30));

        voucherLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        voucherLabel.setForeground(new java.awt.Color(255, 255, 255));
        voucherLabel.setText("Tanggal Expired        :");
        getContentPane().add(voucherLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 265, -1, -1));

        warnaLabel.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        warnaLabel.setForeground(new java.awt.Color(255, 255, 255));
        warnaLabel.setText("Item Color                  :");
        getContentPane().add(warnaLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 265, -1, -1));

        kembaliButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/kembaliButton.png"))); // NOI18N
        kembaliButton.setToolTipText("");
        kembaliButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });
        getContentPane().add(kembaliButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 90, 30));

        tabelItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelItem.setGridColor(new java.awt.Color(48, 81, 31));
        jScrollPane1.setViewportView(tabelItem);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 300, 610, 110));

        editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/editButton.png"))); // NOI18N
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 90, 30));

        hapusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/hapusButton.png"))); // NOI18N
        hapusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });
        getContentPane().add(hapusButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, 90, 30));

        tambahButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/tambahButton.png"))); // NOI18N
        tambahButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tambahButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahButtonActionPerformed(evt);
            }
        });
        getContentPane().add(tambahButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 90, 30));

        rewardField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rewardFieldActionPerformed(evt);
            }
        });
        getContentPane().add(rewardField, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 250, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/MenuExchange.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void poinFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poinFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_poinFieldActionPerformed

    private void stokFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stokFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stokFieldActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        String selected = (String) typeComboBox.getSelectedItem();
        if ("Digital".equals(selected)){
            tanggalExpiredField.setVisible(true);
            voucherLabel.setVisible(true);
            warnaField.setVisible(false);
            warnaLabel.setVisible(false);
        } else if ("Fisik".equals(selected)){
            tanggalExpiredField.setVisible(false);
            voucherLabel.setVisible(false);
            warnaField.setVisible(true);
            warnaLabel.setVisible(true);
        } else {
            tanggalExpiredField.setVisible(false);
            voucherLabel.setVisible(false);
            warnaField.setVisible(false);
            warnaLabel.setVisible(false);
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void warnaFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_warnaFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_warnaFieldActionPerformed

    private void tanggalExpiredFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanggalExpiredFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tanggalExpiredFieldActionPerformed

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        DashboardAdmin dashboard = new DashboardAdmin();
        dashboard.setVisible(true);
        dashboard.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_kembaliButtonActionPerformed

    private void tambahButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahButtonActionPerformed
        try {
            String namaItem = rewardField.getText();
            int stok = Integer.parseInt(stokField.getText());
            int exchangePoin = Integer.parseInt(poinField.getText());
            String selected = (String) typeComboBox.getSelectedItem();
            if (namaItem.equals("") || stok == 0 || exchangePoin == 0 || selected.equals("Pilih Tipe Item")){
                JOptionPane.showConfirmDialog(null, "Semua data wajib diisi!");
            } else {
                if ("Digital".equals(selected)){
                    String expired = tanggalExpiredField.getText();
                    HadiahDigital digital = new HadiahDigital(namaItem, stok, exchangePoin, selected, expired);
                    digital.create();
                    loadTabel();
                } else if ("Fisik".equals(selected)){
                    String warna = warnaField.getText();
                    HadiahFisik fisik = new HadiahFisik(namaItem, stok, exchangePoin, selected, warna);
                    fisik.create();
                    loadTabel();
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Gagal menambah data! " + e.getMessage());
        }

    }//GEN-LAST:event_tambahButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        try {
            int selectedRow = tabelItem.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih baris yang akan diubah!");
            } else {
                String id = tabelItem.getValueAt(selectedRow, 0).toString();
                String name = rewardField.getText();
                int stok = Integer.parseInt(stokField.getText());
                int exchangePoin = Integer.parseInt(poinField.getText());
                String tipe = typeComboBox.getSelectedItem().toString();

                if (tipe.equals("Pilih Categori")) {
                    JOptionPane.showMessageDialog(null, "Tolong isi semua kolom");
                } else if (tipe.equals("Digital")){
                    String tanggalExpired = tanggalExpiredField.getText();
                    HadiahDigital digital = new HadiahDigital(name, stok, exchangePoin, tipe, tanggalExpired);
                    digital.update(id);
                    loadTabel();
                } else if (tipe.equals("Fisik")){
                    String warna = warnaField.getText();
                    HadiahFisik fisik = new HadiahFisik(name, stok, exchangePoin, tipe, warna);
                    fisik.update(id);
                    loadTabel();
                }
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void rewardFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rewardFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rewardFieldActionPerformed

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusButtonActionPerformed
        int selectedRow = tabelItem.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(null, "Silahkan pilih baris yang akan dihapus");
            } else {
                DefaultTableModel model = (DefaultTableModel) tabelItem.getModel();
                String id = tabelItem.getValueAt(selectedRow, 0).toString();
                HadiahFisik hadiah = new HadiahFisik("", 0, 0, "", "");
                hadiah.delete(id);
                model.removeRow(selectedRow);
            }
    }//GEN-LAST:event_hapusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KelolaExchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KelolaExchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KelolaExchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KelolaExchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KelolaExchange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editButton;
    private javax.swing.JButton hapusButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JTextField poinField;
    private javax.swing.JTextField rewardField;
    private javax.swing.JTextField stokField;
    private javax.swing.JTable tabelItem;
    private javax.swing.JButton tambahButton;
    private javax.swing.JTextField tanggalExpiredField;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel voucherLabel;
    private javax.swing.JTextField warnaField;
    private javax.swing.JLabel warnaLabel;
    // End of variables declaration//GEN-END:variables
}
