package view;

import java.sql.Connection; 
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.Database;
import model.Session;
import model.User;

public class TukarPoin extends javax.swing.JFrame {

    /**
     * Creates new form TukarPoin
     */
    public TukarPoin() {
        initComponents();
        loadTabel();
        setPoinSekarang();
    }
    
    void loadTabel(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Nama Item");
        model.addColumn("Stok");
        model.addColumn("Harga Poin");
        model.addColumn("Tipe");
        model.addColumn("Tanggal Expired");
        model.addColumn("Warna");
        
        Connection conn = null;
        try {
            conn = Database.connect();
            String query = "SELECT * FROM hadiah";
            PreparedStatement ps = Database.connection.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()){
                model.addRow(new Object[]{
                    rs.getString("id"),
                    rs.getString("nama_produk"),
                    rs.getInt("stok"),
                    rs.getInt("poin_penukaran"),
                    rs.getString("tipe"),
                    rs.getString("tanggal_expired"),
                    rs.getString("warna")
                });
                tabelItem.setModel(model);
                TableColumnModel columnModel = tabelItem.getColumnModel();
                columnModel.getColumn(0).setPreferredWidth(70);
                columnModel.getColumn(1).setPreferredWidth(150);
                columnModel.getColumn(2).setPreferredWidth(38);
                columnModel.getColumn(3).setPreferredWidth(100);
                columnModel.getColumn(4).setPreferredWidth(65);
                columnModel.getColumn(5).setPreferredWidth(150);
                columnModel.getColumn(6).setPreferredWidth(100);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Gagal menampilkan data" + e.getMessage());
        } finally {
            if (conn != null) {
                Database.disconnect();
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        typeComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        kembaliButton = new javax.swing.JButton();
        poinSekarang = new javax.swing.JLabel();
        klaimButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelItem = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semua tipe", "Digital", "Fisik" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(typeComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 110, 180, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tipe Hadiah yang diinginkan        :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        kembaliButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/kembaliButton.png"))); // NOI18N
        kembaliButton.setToolTipText("");
        kembaliButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kembaliButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliButtonActionPerformed(evt);
            }
        });
        getContentPane().add(kembaliButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 90, 30));

        poinSekarang.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        poinSekarang.setForeground(new java.awt.Color(255, 255, 255));
        poinSekarang.setText("Poin anda sekarang");
        getContentPane().add(poinSekarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, -1, -1));

        klaimButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/KlaimButton.png"))); // NOI18N
        klaimButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        klaimButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                klaimButtonActionPerformed(evt);
            }
        });
        getContentPane().add(klaimButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 340, 90, 30));

        tabelItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tabelItem);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 490, 270));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/TukarPoin.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        try {
            String selected = (String) typeComboBox.getSelectedItem();
            DefaultTableModel model = new DefaultTableModel();

            // Koneksi ke database
            Connection conn = Database.connect();
            PreparedStatement ps = null;
            ResultSet rs = null;

            if ("Digital".equals(selected)) {
                model.addColumn("ID");
                model.addColumn("Nama Item");
                model.addColumn("Stok");
                model.addColumn("Harga Poin");
                model.addColumn("Tipe");
                model.addColumn("Tanggal Expired");

                String query = "SELECT id, nama_produk, stok, poin_penukaran, tipe, tanggal_expired " +
                               "FROM hadiah WHERE tipe = 'Digital'";
                ps = conn.prepareStatement(query);
            } else if ("Fisik".equals(selected)) {
                model.addColumn("ID");
                model.addColumn("Nama Item");
                model.addColumn("Stok");
                model.addColumn("Harga Poin");
                model.addColumn("Tipe");
                model.addColumn("Warna");

                String query = "SELECT id, nama_produk, stok, poin_penukaran, tipe, warna " +
                               "FROM hadiah WHERE tipe = 'Fisik'";
                ps = conn.prepareStatement(query);
            } else {
                model.addColumn("ID");
                model.addColumn("Nama Item");
                model.addColumn("Stok");
                model.addColumn("Harga Poin");
                model.addColumn("Tipe");
                model.addColumn("Tanggal Expired");
                model.addColumn("Warna");

                String query = "SELECT * FROM hadiah";
                ps = conn.prepareStatement(query);
            }

            // Eksekusi query
            rs = ps.executeQuery();
            while (rs.next()) {
                if ("Digital".equals(selected)) {
                    model.addRow(new Object[]{
                        rs.getString("id"),
                        rs.getString("nama_produk"),
                        rs.getInt("stok"),
                        rs.getInt("poin_penukaran"),
                        rs.getString("tipe"),
                        rs.getString("tanggal_expired")
                    });
                } else if ("Fisik".equals(selected)) {
                    model.addRow(new Object[]{
                        rs.getString("id"),
                        rs.getString("nama_produk"),
                        rs.getInt("stok"),
                        rs.getInt("poin_penukaran"),
                        rs.getString("tipe"),
                        rs.getString("warna")
                    });
                } else {
                    model.addRow(new Object[]{
                        rs.getString("id"),
                        rs.getString("nama_produk"),
                        rs.getInt("stok"),
                        rs.getInt("poin_penukaran"),
                        rs.getString("tipe"),
                        rs.getString("tanggal_expired"),
                        rs.getString("warna")
                    });
                }
            }

            // Set model tabel
            tabelItem.setModel(model);
            TableColumnModel columnModel = tabelItem.getColumnModel();
            columnModel.getColumn(0).setPreferredWidth(70);
            columnModel.getColumn(1).setPreferredWidth(150);
            columnModel.getColumn(2).setPreferredWidth(38);
            columnModel.getColumn(3).setPreferredWidth(100);
            columnModel.getColumn(4).setPreferredWidth(65);
            if ("Digital".equals(selected)) {
                columnModel.getColumn(5).setPreferredWidth(150); // Tanggal Expired
            } else if ("Fisik".equals(selected)) {
                columnModel.getColumn(5).setPreferredWidth(100); // Warna
            } else {
                columnModel.getColumn(5).setPreferredWidth(150); // Tanggal Expired
                columnModel.getColumn(6).setPreferredWidth(100); // Warna
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void kembaliButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliButtonActionPerformed
        MenuUser menu = new MenuUser();
        menu.setVisible(true);
        menu.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_kembaliButtonActionPerformed

    private void setPoinSekarang() {
        User currentUser = Session.getInstance().getCurrentUser();
        if (currentUser != null) {
            int userPoin = currentUser.getPoin();
            poinSekarang.setText("<html>Poin anda sekarang:<br><center>" + userPoin + "</center></html>");
        } else {
            poinSekarang.setText("<html>Poin anda sekarang:<br><center>Tidak ditemukan</center></html>");
        }
    }

    
    private void klaimButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_klaimButtonActionPerformed
        int selectedRow = tabelItem.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih hadiah terlebih dahulu!");
            return;
        }

        // Ambil data item yang dipilih
        String idItem = (String) tabelItem.getValueAt(selectedRow, 0);
        String namaProduk = (String) tabelItem.getValueAt(selectedRow, 1);
        int hargaPoin = (int) tabelItem.getValueAt(selectedRow, 3);
        int stokHadiah = (int) tabelItem.getValueAt(selectedRow, 2); 

        // Ambil poin pengguna saat ini
        User currentUser = Session.getInstance().getCurrentUser();
        int poinSekarang = currentUser.getPoin();

        if (poinSekarang >= hargaPoin) {
            // Kurangi poin pengguna
            currentUser.tambahPoin(-hargaPoin);
            currentUser.updatePoinToDatabase();
            setPoinSekarang(); 

            if (stokHadiah > 0) {
                Connection conn = null;
                try {
                    conn = Database.connect();

                    // Update stok hadiah
                    String query = "UPDATE hadiah SET stok = stok - 1 WHERE id = ?";
                    PreparedStatement ps = conn.prepareStatement(query);
                    ps.setString(1, idItem);
                    int affectedRows = ps.executeUpdate();

                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(null, "Berhasil menukarkan " + hargaPoin + " poin untuk hadiah " + namaProduk + "!");
                        loadTabel();
                    } else {
                        JOptionPane.showMessageDialog(null, "Gagal mengupdate stok hadiah!");
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Gagal mengupdate stok hadiah: " + e.getMessage());
                } finally {
                    if (conn != null) {
                        Database.disconnect();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Stok hadiah " + namaProduk + " sudah habis.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Poin Anda tidak cukup untuk klaim hadiah ini.");
        }
    }//GEN-LAST:event_klaimButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TukarPoin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TukarPoin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TukarPoin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TukarPoin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TukarPoin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton kembaliButton;
    private javax.swing.JButton klaimButton;
    private javax.swing.JLabel poinSekarang;
    private javax.swing.JTable tabelItem;
    private javax.swing.JComboBox<String> typeComboBox;
    // End of variables declaration//GEN-END:variables
}
